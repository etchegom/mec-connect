[tool.poetry]
name = "mec-connect"
version = "0.1.0"
description = ""
authors = ["Etchegoyen Matthieu <etchegom@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
httpx = "^0.27.0"
django = "^5.0.5"
django-environ = "^0.11.2"
django-ninja = "^1.1.0"
psycopg2-binary = "^2.9.9"
django-extensions = "^3.2.3"
factory-boy = "^3.3.0"
pytest = "^8.2.0"
pytest-django = "^4.8.0"
celery = "^5.4.0"
redis = "^5.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "mec_connect.settings.testing"
python_files = ["test_*.py"]

[tool.black]
line-length = 100
skip-magic-trailing-comma = false
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.ruff]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "C90", # mccabe
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "T20", # flake8-print
    "Q",   # flake8-quotes
    "TID", # flake8-tidy-imports
    "PGH", # pygrep-hooks
    "INP", # flake8-no-pep420
]
line-length = 100
show-fixes = true
fixable = ["ALL"]
unfixable = ["B"]
target-version = "py312"
exclude = [".venv"]

[tool.ruff.isort]
case-sensitive = true
known-third-party = ["django", "environ", "factory", "ninja"]
split-on-trailing-comma = true
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
required-imports = ["from __future__ import annotatios"]
